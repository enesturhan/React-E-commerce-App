{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TULPAR\\\\Desktop\\\\sa\\\\src\\\\pages\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Layout from '../components/Layout';\nimport { Outlet } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchProduct } from '../store/actions/product.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // react-redux tarafında artık useDispatch ve useSelector hooklarını kullanıyor. Bir action çalıştırmak için useDispatch, state deki veriyi okumak için ise useSelector kullanıyoruz.\n  // mapStatetoProps mapDispacthToProps kavramları yerini bu hooklar aldık. connect ile componente bağlanmada ortadan kalktı\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // app.js ilk açıldığında git products state güncelle.\n    dispatch(fetchProduct());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/TULPAR/Desktop/sa/src/pages/App.js"],"names":["Layout","Outlet","useDispatch","useEffect","fetchProduct","App","dispatch"],"mappings":";;;AAAA,OAAO,WAAP;AAEA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,kCAA7B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd;AACA;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf;AACAG,IAAAA,QAAQ,CAACF,YAAY,EAAb,CAAR;AACA,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAEC,QAAC,MAAD;AAAA,6BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,UADD;AASA;;GAnBQC,G;UAGSH,W;;;KAHTG,G;AAqBT,eAAeA,GAAf","sourcesContent":["import './App.css';\r\n\r\nimport Layout from '../components/Layout';\r\nimport { Outlet } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { fetchProduct } from '../store/actions/product.actions';\r\n\r\nfunction App() {\r\n\t// react-redux tarafında artık useDispatch ve useSelector hooklarını kullanıyor. Bir action çalıştırmak için useDispatch, state deki veriyi okumak için ise useSelector kullanıyoruz.\r\n\t// mapStatetoProps mapDispacthToProps kavramları yerini bu hooklar aldık. connect ile componente bağlanmada ortadan kalktı\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\t// app.js ilk açıldığında git products state güncelle.\r\n\t\tdispatch(fetchProduct());\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{/*  */}\r\n\t\t\t<Layout>\r\n\t\t\t\t<Outlet />\r\n\t\t\t\t{/* renderbody */}\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}